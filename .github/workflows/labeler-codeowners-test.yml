name: "Labeler Codeowners Test"
on:
 pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

env:
  ASIS_AUTHOR_PR: 41
  NO_LABEL_NO_REQUEST_PR: 37
  LABELED_NO_REQUEST_PR: 38
  NO_LABEL_REQUESTED_PR: 39
  DRAFT_NO_LABEL_NO_REQUEST_PR: 40
  NO_LABEL_REVIEWED_PR: 44
  NO_LABEL_REVIEWED_LAST_COMMIT_PR: 46
  CLOSED_NO_LABEL_NO_REQUEST_PR: 23

jobs:
  codeowners-test:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    if: github.event.action != 'ready_for_review'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      #
      # Test that review requests cannot be sent to the author
      #
      - name: Label-kit codeowners-enable
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --format json --jq '[ .[].name ] | join(",")' \
            "${ASIS_AUTHOR_PR}"
      - &test-reviewers-empty
        name: Test reviewers (should have not reviewers)
        run: |
          REVIEWERS=$(gh pr view "${ASIS_AUTHOR_PR}" --json reviewRequests --jq '.reviewRequests[].login')
          test "${REVIEWERS}" == ""
      - &label-kit-codeowners-disable
        name: Label-kit codeowners-disable
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-disable.yml \
            --sync \
            --format json --jq '[ .[].name ] | join(",")' \
            "${ASIS_AUTHOR_PR}"

      #
      # Test that review requests invalid user are ignored
      #
      - name: Label-kit codeowners-enable (invalid user)
        id: codeowners-invalid-user
        continue-on-error: true
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-invalid-user.yml \
            --sync \
            --format json --jq '[ .[].name ] | join(",")' \
            "${ASIS_AUTHOR_PR}"
      - name: Test reviewers
        env:
          CODEOWNERS_INVALID_USER_OUTCOME: ${{ steps.codeowners-invalid-user.outcome }}
        run: |
          REVIEWERS=$(gh pr view "${ASIS_AUTHOR_PR}" --json reviewRequests --jq '.reviewRequests[].login')
          test "${REVIEWERS}" == ""
          test "${CODEOWNERS_INVALID_USER_OUTCOME}" == "failure"
      - *label-kit-codeowners-disable

      #
      # Test closed PR does not request reviewers
      #
      - name: Label-kit codeowners-enable (closed PR)
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --dryrun \
            --format json --jq '[ .[].name ] | join(",")' \
            "${CLOSED_NO_LABEL_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - &test-reviewers-no-request
        name: Test no request
        run: |
          if grep -q "Would request reviewers for PR" "${RUNNER_TEMP}/output.txt"; then
            echo "Error: Would request reviewers even if already requested"
            exit 1
          fi

  codeowners-ready-for-review-test:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    if: github.event.action == 'ready_for_review'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      - name: Label-kit codeowners-enable (ready_for_review, already labeled)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-invalid-user.yml \
            --sync \
            --review-request ready_for_review \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - name: Test reviewers
        run: |
          grep -q "Would request reviewers for PR" "${RUNNER_TEMP}/output.txt"
          grep -q "octocat" "${RUNNER_TEMP}/output.txt"

  codeowners-request-mode-test:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    if: github.event.action != 'ready_for_review'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      #
      # addto reviewers
      #
      - name: Label-kit codeowners-enable (addto)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --dryrun \
            "${NO_LABEL_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - &test-reviewers-srz-zumix
        name: Test reviewers
        run: |
          grep -q "Would request reviewers for PR" "${RUNNER_TEMP}/output.txt"
          grep -q "srz-zumix" "${RUNNER_TEMP}/output.txt"

      - name: Label-kit codeowners-enable (addto, already labeled)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request

      - name: Label-kit codeowners-enable (addto, already requested)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --dryrun \
            "${NO_LABEL_REQUESTED_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request

      #
      # always request
      #
      - name: Label-kit codeowners-enable (always)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request always \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-srz-zumix

      #
      # none request
      #
      - name: Label-kit codeowners-enable (none request)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request none \
            --dryrun \
            "${NO_LABEL_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request

      #
      # ready_for_review request
      #
      - name: Label-kit codeowners-enable (ready_for_review, draft PR)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request ready_for_review \
            --dryrun \
            "${DRAFT_NO_LABEL_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request
      - name: Label-kit codeowners-enable (ready_for_review, already labeled)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request ready_for_review \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request

      #
      # always_reviewable request
      #
      - name: Label-kit codeowners-enable (always_reviewable, draft PR)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request always_reviewable \
            --dryrun \
            "${DRAFT_NO_LABEL_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request
      - name: Label-kit codeowners-enable (always_reviewable, already labeled)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request always_reviewable \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-srz-zumix

  codeowners-expand-fallback-test:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    if: github.event.action != 'ready_for_review'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      - name: Label-kit codeowners-enable (expand-fallback)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-expand-fallback.yml \
            --sync \
            --review-request always \
            --dryrun \
            "${LABELED_NO_REQUEST_PR}" | tee ${{ runner.temp }}/output.txt
      - name: Test reviewers (expand fallback)
        run: |
          grep -q "Would request reviewers for PR" "${RUNNER_TEMP}/output.txt"
          grep -q "srz-zumix/team" "${RUNNER_TEMP}/output.txt"

  codeowners-review-status-test:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build ./...

      - name: Label-kit codeowners-enable (always, already reviewed, last commit)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request always \
            --dryrun \
            "${NO_LABEL_REVIEWED_LAST_COMMIT_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-no-request
      - name: Label-kit codeowners-enable (always, already reviewed)
        shell: bash
        run: |
          go run . labeler \
            --config .github/labeler-codeowners-test-enable.yml \
            --sync \
            --review-request always \
            --dryrun \
            "${NO_LABEL_REVIEWED_PR}" | tee ${{ runner.temp }}/output.txt
      - *test-reviewers-srz-zumix

